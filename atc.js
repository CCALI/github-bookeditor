// Generated by CoffeeScript 1.3.3
(function() {

  define(['underscore', 'backbone', 'bookish/controller', 'bookish/models', 'bookish/media-types', 'bookish/auth', 'css!bookish'], function(_, Backbone, Controller, Models, MEDIA_TYPES, Auth) {
    var AtcWorkspace, DEBUG, ROOT_URL, STORED_KEYS, WORKSPACE_URL, b, readDir, readFile, resetDesktop, uuid, writeFile,
      _this = this;
    DEBUG = true;
    uuid = b = function(a) {
      if (a) {
        return (a ^ Math.random() * 16 >> a / 4).toString(16);
      } else {
        return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, b);
      }
    };
    writeFile = function(path, text, commitText) {
      return Auth.getRepo().write(Auth.get('branch'), "" + (Auth.get('rootPath')) + path, text, commitText);
    };
    readFile = function(path) {
      return Auth.getRepo().read(Auth.get('branch'), "" + (Auth.get('rootPath')) + path);
    };
    readDir = function(path) {
      return Auth.getRepo().contents(Auth.get('branch'), path);
    };
    ROOT_URL = '';
    WORKSPACE_URL = "" + ROOT_URL + "/workspace/";
    Models.BaseContent.prototype.url = function() {
      return "" + ROOT_URL + "/module/" + this.id;
    };
    Models.BaseBook.prototype.url = function() {
      return "" + ROOT_URL + "/collection/" + this.id;
    };
    Auth.set({
      username: 'test',
      password: 'test'
    });
    Backbone.ajax = function(config) {
      config = _.extend(config, {
        headers: {
          'REMOTE_USERURI': 'cnxuser:75e06194-baee-4395-8e1a-566b656f6920'
        }
      });
      return Backbone.$.ajax.apply(Backbone.$, [config]);
    };
    AtcWorkspace = Models.DeferrableCollection.extend({
      url: WORKSPACE_URL,
      parse: function(results) {
        var ContentType, item, model;
        results = (function() {
          var _i, _len, _results;
          _results = [];
          for (_i = 0, _len = results.length; _i < _len; _i++) {
            item = results[_i];
            ContentType = MEDIA_TYPES.get(item.mediaType).constructor;
            model = new ContentType(item);
            _results.push(model);
          }
          return _results;
        })();
        return results;
      }
    });
    Models.WORKSPACE = new AtcWorkspace();
    resetDesktop = function() {
      Models.ALL_CONTENT.reset();
      Models.WORKSPACE.fetch();
      if (!Backbone.History.started) {
        Controller.start();
      }
      return Backbone.history.navigate('workspace');
    };
    STORED_KEYS = ['username', 'password'];
    Auth.on('change', function() {
      if (!_.isEmpty(_.pick(Auth.changed, STORED_KEYS))) {
        if (Auth.get('password') && !Auth.previousAttributes()['password']) {
          return;
        }
        return resetDesktop();
      }
    });
    if (!Backbone.History.started) {
      Controller.start();
    }
    return Backbone.history.navigate('workspace');
  });

}).call(this);
